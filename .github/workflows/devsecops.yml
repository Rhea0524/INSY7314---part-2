name: Advanced DevSecOps Pipeline

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  dependency-security:
    runs-on: ubuntu-latest
    name: Dependency Vulnerability Scanning
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: npm install
    
    - name: NPM Audit - Check for known vulnerabilities
      run: npm audit --audit-level=moderate
      continue-on-error: true
    
    - name: Snyk Security Scan
      uses: snyk/actions/node@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high

  secret-scanning:
    runs-on: ubuntu-latest
    name: Secret Detection & Credential Scanning
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: TruffleHog Secret Scan
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
      continue-on-error: true
    
    - name: GitLeaks Secret Detection
      uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      continue-on-error: true

  sast-analysis:
    runs-on: ubuntu-latest
    name: Static Application Security Testing (SAST)
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: npm install
    
    - name: ESLint Security Analysis
      run: |
        npm install eslint-plugin-security --save-dev
        npx eslint . --ext .js,.jsx
      continue-on-error: true
    
    - name: SonarCloud SAST Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      continue-on-error: true

  code-quality:
    runs-on: ubuntu-latest
    name: Code Quality & Security Linting
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: npm install
    
    - name: Run ESLint with security rules
      run: |
        npm install eslint-plugin-security --save-dev
        npx eslint . --ext .js,.jsx --plugin security
      continue-on-error: true
    
    - name: Check code formatting
      run: npx prettier --check "src/**/*.{js,jsx}" --ignore-unknown
      continue-on-error: true

  container-security:
    runs-on: ubuntu-latest
    name: Container & Infrastructure Security
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Trivy filesystem scan
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        severity: 'CRITICAL,HIGH'
      continue-on-error: true

  license-compliance:
    runs-on: ubuntu-latest
    name: License Compliance Check
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: npm install
    
    - name: Check license compliance
      run: |
        npx license-checker --summary
      continue-on-error: true

  build-and-test:
    runs-on: ubuntu-latest
    name: Build Verification & Testing
    needs: [dependency-security, secret-scanning, sast-analysis]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: npm install
    
    - name: Build application
      run: npm run build
      continue-on-error: true
    
    - name: Run tests (if available)
      run: npm test --if-present
      continue-on-error: true

  security-report:
    runs-on: ubuntu-latest
    name: Generate Security Report
    needs: [dependency-security, secret-scanning, sast-analysis, code-quality, container-security, license-compliance, build-and-test]
    if: always()
    
    steps:
    - name: Security Pipeline Summary
      run: |
        echo "========================================="
        echo "DEVSECOPS PIPELINE EXECUTION COMPLETE"
        echo "========================================="
        echo ""
        echo "Security Scans Performed:"
        echo "1. Dependency Vulnerability Scanning (npm audit + Snyk)"
        echo "2. Secret & Credential Detection (TruffleHog + GitLeaks)"
        echo "3. Static Application Security Testing (ESLint + SonarCloud)"
        echo "4. Code Quality Analysis (Prettier + ESLint Security Plugin)"
        echo "5. Container/Infrastructure Security (Trivy)"
        echo "6. License Compliance Verification"
        echo "7. Build Verification"
        echo ""
        echo "Pipeline features:"
        echo "- Automated security scanning on every commit"
        echo "- Multi-tool approach for comprehensive coverage"
        echo "- SAST, SCA, and secret detection"
        echo "- License compliance checking"
        echo "- Parallel job execution for speed"
        echo "========================================="